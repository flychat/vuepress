(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{229:function(t,n,e){"use strict";e.r(n);var s=e(0),r=Object(s.a)({},function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"socks5-集群均衡负载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#socks5-集群均衡负载","aria-hidden":"true"}},[this._v("#")]),this._v(" socks5 集群均衡负载")]),this._v(" "),n("div",{staticClass:"language-./haproxy.cfg extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('=====./haproxy.cfg=====\nfrontend socks5\n    mode tcp\n    bind *:8080\n    timeout client          1m\n    default_backend ssh_cluster\n\nbackend ssh_cluster\n    mode tcp\n    balance roundrobin\n    timeout connect         10s\n    timeout server          1m\n    server vps1 52.xx.xx.xx:2020 weight 1 check inter 30000\n    server vps2 34.xx.xx.xx:2020 weight 1 check inter 30000\n\nlisten stats \n\tbind *:9090\n    balance\n    mode http\n    stats enable\n    timeout connect         10s\n    timeout client          1m\n    timeout server          1m\n    stats uri /haproxy?stats\n\n\n=====docker-compose.yml=====\nversion: \'3\'\nservices:\n  app:\n    image: haproxy\n    restart: unless-stopped\n    ports:\n      - "8080:8080"\n      - "9090:9090"\n    volumes:\n      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro\n      \n      \n====start===\ndocker-compose up -d\n\n====test====\ncurl -x 192.168.31.45:8080 http://icanhazip.com\n\n')])])])])},[],!1,null,null,null);n.default=r.exports}}]);